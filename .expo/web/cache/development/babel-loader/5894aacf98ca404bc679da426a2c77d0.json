{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\raulf\\\\OneDrive\\\\Desktop\\\\nativeFrontend\\\\screens\\\\Test.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Icon, Button, Card, ThemeConsumer } from 'react-native-elements';\nimport { Avatar, Accessory } from 'react-native-elements';\nimport LoginScreen from \"../screens/LoginScreen\";\nimport RegisterScreen from \"../screens/Register\";\n\nvar imgbg = require(\"../assets/fondo2.jpg\");\n\nimport { useState } from \"react\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nvar logoI = require(\"../assets/logo.png\");\n\nvar Test = function (_React$Component) {\n  _inherits(Test, _React$Component);\n\n  var _super = _createSuper(Test);\n\n  function Test(props) {\n    var _this;\n\n    _classCallCheck(this, Test);\n\n    _this = _super.call(this, props);\n    var loggedIn;\n    _this.state = {\n      cardstate: 0,\n      loggedIn: loggedIn\n    };\n    return _this;\n  }\n\n  _createClass(Test, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        style: styles.scroll,\n        contentContainerStyle: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 8\n        }\n      }, React.createElement(ImageBackground, {\n        source: imgbg,\n        resizeMode: \"stretch\",\n        style: styles.imgBack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 10\n        }\n      }, React.createElement(Avatar, {\n        style: styles.avatar,\n        rounded: true,\n        source: logoI,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.buttonLogin,\n        onPress: function onPress() {\n          return _this2.setState({\n            cardstate: 0\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.textButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, \"Entrar\")), React.createElement(TouchableOpacity, {\n        style: styles.buttonRegister,\n        onPress: function onPress() {\n          return _this2.setState({\n            cardstate: 1\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 10\n        }\n      }, React.createElement(Text, {\n        style: styles.textButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, \"Registrar\"))), this.state.cardstate == 0 ? React.createElement(View, {\n        style: styles.loginContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 41\n        }\n      }, React.createElement(LoginScreen, {\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 77\n        }\n      })) : React.createElement(View, {\n        style: styles.registerContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 14\n        }\n      }, React.createElement(RegisterScreen, {\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 53\n        }\n      })), this.state.cardstate == 0 ? React.createElement(Text, {\n        style: styles.recuperarText,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('Forgot');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 44\n        }\n      }, \"Recuperar Password\") : null));\n    }\n  }]);\n\n  return Test;\n}(React.Component);\n\nexport { Test as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  buttonLogin: {\n    alignItems: \"center\",\n    padding: 10,\n    width: '45%',\n    marginLeft: '-15%'\n  },\n  buttonRegister: {\n    alignItems: \"center\",\n    padding: 10,\n    width: '45%',\n    marginLeft: '40%'\n  },\n  buttonContainer: {\n    alignSelf: 'center',\n    width: '50%',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  tabsContainer: {\n    height: '90%',\n    width: '80%',\n    alignSelf: 'center',\n    backgroundColor: '#e1e9f5',\n    borderRadius: 30,\n    backgroundColor: 'white'\n  },\n  scroll: {\n    width: '100%',\n    height: '100%',\n    flex: 1\n  },\n  loginContainer: {\n    height: '60%',\n    width: '80%',\n    alignSelf: 'center',\n    backgroundColor: '#e1e9f5',\n    borderRadius: 30,\n    backgroundColor: 'white'\n  },\n  registerContainer: {\n    height: '75%',\n    width: '80%',\n    alignSelf: 'center',\n    backgroundColor: '#e1e9f5',\n    borderRadius: 30,\n    backgroundColor: 'white'\n  },\n  avatar: {\n    height: 70,\n    width: 70,\n    alignSelf: 'center',\n    marginBottom: '-3%',\n    marginTop: '12%'\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10\n  },\n  textButton: {\n    color: 'white',\n    fontSize: 15,\n    fontWeight: 'bold'\n  },\n  imgBack: {\n    flex: 1\n  },\n  recuperarText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 20,\n    alignSelf: 'center'\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  openButton: {\n    backgroundColor: \"#F194FF\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/raulf/OneDrive/Desktop/nativeFrontend/screens/Test.js"],"names":["React","Icon","Button","Card","ThemeConsumer","Avatar","Accessory","LoginScreen","RegisterScreen","imgbg","require","useState","AsyncStorage","ScrollView","logoI","Test","props","loggedIn","state","cardstate","styles","scroll","flex","imgBack","avatar","buttonContainer","buttonLogin","setState","textButton","buttonRegister","loginContainer","navigation","registerContainer","recuperarText","navigate","Component","StyleSheet","create","container","width","height","alignItems","padding","marginLeft","alignSelf","flexDirection","justifyContent","tabsContainer","backgroundColor","borderRadius","marginBottom","marginTop","button","color","fontSize","fontWeight","modalView","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","openButton","textStyle","textAlign","modalText"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Text,TextInput,View, Image,ImageBackground, StyleSheet,TouchableOpacity,Alert,TouchableHighlight,SafeAreaView} from 'react-native';\r\nimport { Icon,Button,Card, ThemeConsumer } from 'react-native-elements'\r\nimport { Avatar, Accessory } from 'react-native-elements';\r\nimport LoginScreen from '../screens/LoginScreen';\r\nimport RegisterScreen from '../screens/Register';\r\nconst imgbg = require('../assets/fondo2.jpg');\r\nimport  { useState } from \"react\";\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\n\r\nconst logoI = require('../assets/logo.png')\r\n\r\nexport default class Test extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    let loggedIn;\r\n   this.state = {\r\n     cardstate:0,\r\n     loggedIn\r\n   }\r\n   //this.getStorageValue()\r\n \r\n    \r\n}\r\n   \r\n\r\n/*\r\nasync getStorageValue(){\r\n   this.token =  await AsyncStorage.getItem('token');\r\n    //console.log('ala: '+this.token);\r\n     \r\n    if(this.token==null){\r\n       this.setState({loggedIn :false})\r\n    }\r\n    else {\r\n      this.setState({loggedIn :true})\r\n    }\r\n    if(this.state.loggedIn){\r\n      this.props.navigation.replace('Home')\r\n    }\r\n}*/\r\n\r\n  render() {\r\n    \r\n\r\n    return (\r\n      \r\n       <ScrollView  style={styles.scroll}contentContainerStyle={{flex: 1}}>\r\n         <ImageBackground  source={imgbg} resizeMode=\"stretch\"style={styles.imgBack}>\r\n          <Avatar\r\n              style={styles.avatar}\r\n              rounded\r\n              source={logoI}\r\n                />\r\n\r\n        <View style={styles.buttonContainer}>\r\n        <TouchableOpacity\r\n         style={styles.buttonLogin} onPress={() => this.setState({ cardstate: 0})}>\r\n        <Text style={styles.textButton}>Entrar</Text>\r\n         </TouchableOpacity>\r\n         <TouchableOpacity\r\n         style={styles.buttonRegister} onPress={() => this.setState({ cardstate: 1})}>\r\n        <Text style={styles.textButton}>Registrar</Text>\r\n         </TouchableOpacity>\r\n         </View>\r\n         \r\n         {this.state.cardstate == 0 ? ( <View style={styles.loginContainer}><LoginScreen navigation={this.props.navigation}/>\r\n         </View> ) \r\n         : ( <View style={styles.registerContainer}><RegisterScreen navigation={this.props.navigation}/></View> )}\r\n            \r\n        \r\n\r\n\r\n            {this.state.cardstate == 0 ? ( <Text style={styles.recuperarText}onPress={()=>this.props.navigation.navigate('Forgot')}  >Recuperar Password</Text> ) \r\n         : ( null )}\r\n           \r\n             \r\n           </ImageBackground>  \r\n           </ScrollView>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container:{\r\n   flex:1,\r\n    width:'100%',\r\n    height:'100%',\r\n   \r\n  },\r\n  \r\n  buttonLogin:{\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    width:'45%',\r\n    marginLeft:'-15%',\r\n    \r\n    \r\n  },\r\n  buttonRegister:{\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    width:'45%',\r\n    marginLeft:'40%',\r\n    \r\n    \r\n  },\r\n  \r\n  buttonContainer: {\r\n   alignSelf:'center',\r\n    width:'50%',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    \r\n    \r\n  },\r\n  tabsContainer:{\r\n    height:'90%',\r\n    width:'80%',\r\n    alignSelf:'center',\r\n    backgroundColor:'#e1e9f5',\r\n    borderRadius:30,\r\n    backgroundColor:'white',\r\n    \r\n\r\n  },\r\n  scroll:{\r\n    width:'100%',\r\n    height:'100%',\r\n    flex:1\r\n  },\r\n  loginContainer:{\r\n    height:'60%',\r\n    width:'80%',\r\n    alignSelf:'center',\r\n    backgroundColor:'#e1e9f5',\r\n    borderRadius:30,\r\n    backgroundColor:'white',\r\n    \r\n    \r\n\r\n  },\r\n  registerContainer:{\r\n    height:'75%',\r\n    width:'80%',\r\n    alignSelf:'center',\r\n    backgroundColor:'#e1e9f5',\r\n    borderRadius:30,\r\n    backgroundColor:'white',\r\n    \r\n\r\n  },\r\n  avatar:{\r\n    height:70,\r\n    width:70,\r\n    alignSelf:'center',\r\n    marginBottom:'-3%',\r\n    marginTop:'12%'\r\n  },\r\n \r\n  button: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#DDDDDD\",\r\n    padding: 10\r\n  },\r\n  textButton:{\r\n    color:'white',\r\n    fontSize:15,\r\n    fontWeight:'bold'\r\n  },\r\n  imgBack:{\r\n    flex:1,\r\n   \r\n  },\r\n  recuperarText:{\r\n    color:'white',\r\n    fontWeight:'bold',\r\n    fontSize:20,\r\n    alignSelf:'center',\r\n   \r\n   \r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5\r\n  },\r\n  openButton: {\r\n    backgroundColor: \"#F194FF\",\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\"\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}