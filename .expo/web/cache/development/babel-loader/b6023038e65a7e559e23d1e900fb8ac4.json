{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\raulf\\\\Desktop\\\\nativeFrontend\\\\screens\\\\Home.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { Icon, Button, Header } from 'react-native-elements';\n\nvar HomeScreen = function (_React$Component) {\n  _inherits(HomeScreen, _React$Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this, props);\n    var token = localStorage.getItem(\"token\");\n    var loggedIn = true;\n\n    if (token == null) {\n      loggedIn = false;\n    }\n\n    _this.state = {\n      loggedIn: loggedIn\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var pressHandler = function pressHandler() {\n        localStorage.removeItem(\"token\");\n        window.location.reload(false);\n      };\n\n      if (this.state.loggedIn === false) {\n        this.props.navigation.navigate('Test');\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, React.createElement(Header, {\n        centerComponent: {\n          text: 'MY TITLE',\n          style: {\n            color: 'white'\n          }\n        },\n        rightComponent: {\n          icon: 'search',\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: styles.tabsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.tab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.tab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.tab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.tab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }), React.createElement(Button, {\n        title: \"LogOut\",\n        onPress: pressHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return HomeScreen;\n}(React.Component);\n\nHomeScreen.navigationOptions = {\n  header: null\n};\nexport { HomeScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    height: '100%'\n  },\n  header: {\n    position: 'absolute',\n    backgroundColor: 'white'\n  },\n  tabsContainer: {\n    width: '100%',\n    height: '10%',\n    backgroundColor: 'white'\n  },\n  tab: {\n    width: '25%',\n    height: '100%',\n    backgroundColor: 'white',\n    borderBottomColor: 'gray',\n    borderBottomWidth: 0.5\n  }\n});","map":{"version":3,"sources":["C:/Users/raulf/Desktop/nativeFrontend/screens/Home.js"],"names":["React","Icon","Button","Header","HomeScreen","props","token","localStorage","getItem","loggedIn","state","pressHandler","removeItem","window","location","reload","navigation","navigate","styles","container","text","style","color","icon","tabsContainer","tab","Component","navigationOptions","header","StyleSheet","create","width","height","position","backgroundColor","borderBottomColor","borderBottomWidth"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;AAEA,SAASC,IAAT,EAAcC,MAAd,EAAqBC,MAArB,QAAmC,uBAAnC;;IAGqBC,U;;;;;AACjB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,QAAIC,QAAQ,GAAG,IAAf;;AACA,QAAGH,KAAK,IAAE,IAAV,EAAe;AACXG,MAAAA,QAAQ,GAAG,KAAX;AACH;;AACD,UAAKC,KAAL,GAAW;AACPD,MAAAA,QAAQ,EAARA;AADO,KAAX;AARe;AAWlB;;;;6BAMM;AACL,UAAME,YAAY,GAAG,SAAfA,YAAe,GAAK;AAExBJ,QAAAA,YAAY,CAACK,UAAb,CAAwB,OAAxB;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AAED,OALD;;AAOA,UAAG,KAAKL,KAAL,CAAWD,QAAX,KAAwB,KAA3B,EAAiC;AAC/B,aAAKJ,KAAL,CAAWW,UAAX,CAAsBC,QAAtB,CAA+B,MAA/B;AACH;;AACD,aACM,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,MAAD;AAGV,QAAA,eAAe,EAAE;AAAEC,UAAAA,IAAI,EAAE,UAAR;AAAoBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT;AAA3B,SAHP;AAIV,QAAA,cAAc,EAAE;AAAEC,UAAAA,IAAI,EAAE,QAAR;AAAkBD,UAAAA,KAAK,EAAE;AAAzB,SAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAQJ,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACM,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACO,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACO,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACO,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACO,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CARI,EAec;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfd,EAgBM,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,OAAO,EAAEd,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBN,CADN;AAqBD;;;;EAlDqCX,KAAK,CAAC0B,S;;AAAzBtB,U,CAaZuB,iB,GAAmB;AAExBC,EAAAA,MAAM,EAAE;AAFgB,C;SAbPxB,U;AAqDrB,IAAMc,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,SAAS,EAAC;AAERY,IAAAA,KAAK,EAAC,MAFE;AAGRC,IAAAA,MAAM,EAAC;AAHC,GADqB;AAM/BJ,EAAAA,MAAM,EAAC;AAELK,IAAAA,QAAQ,EAAE,UAFL;AAGLC,IAAAA,eAAe,EAAC;AAHX,GANwB;AAW/BV,EAAAA,aAAa,EAAC;AACZO,IAAAA,KAAK,EAAC,MADM;AAEZC,IAAAA,MAAM,EAAC,KAFK;AAGZE,IAAAA,eAAe,EAAC;AAHJ,GAXiB;AAiB/BT,EAAAA,GAAG,EAAC;AACFM,IAAAA,KAAK,EAAC,KADJ;AAEFC,IAAAA,MAAM,EAAC,MAFL;AAGFE,IAAAA,eAAe,EAAC,OAHd;AAIFC,IAAAA,iBAAiB,EAAC,MAJhB;AAKFC,IAAAA,iBAAiB,EAAC;AALhB;AAjB2B,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { Text,TextInput,View, ImageBackground,StyleSheet, AsyncStorage } from 'react-native';\r\nimport { Icon,Button,Header } from 'react-native-elements'\r\n\r\n\r\nexport default class HomeScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const token = localStorage.getItem(\"token\")\r\n        //const token = AsyncStorage.getItem(\"token\")\r\n        let loggedIn = true\r\n        if(token==null){\r\n            loggedIn = false\r\n        }\r\n        this.state={\r\n            loggedIn\r\n        }\r\n    }\r\n  static navigationOptions ={\r\n      \r\n    header: null\r\n  }\r\n\r\n  render() {\r\n      const pressHandler = () =>{\r\n      \r\n        localStorage.removeItem(\"token\")\r\n        window.location.reload(false);\r\n       \r\n      }\r\n  \r\n      if(this.state.loggedIn === false){\r\n        this.props.navigation.navigate('Test')\r\n    }\r\n    return (\r\n          <View style={styles.container}>\r\n            \r\n            <Header \r\n            \r\n    \r\n  centerComponent={{ text: 'MY TITLE', style: { color: 'white' } } }\r\n  rightComponent={{ icon: 'search', color: 'black' }}\r\n/>\r\n      <View style={styles.tabsContainer}>\r\n        <View style={styles.tab}></View>\r\n        <View style={styles.tab}></View>\r\n        <View style={styles.tab}></View>\r\n        <View style={styles.tab}></View>\r\n        \r\n      </View>\r\n                        <br/> \r\n                <Button title=\"LogOut\" onPress={pressHandler}></Button>\r\n               \r\n          </View>        \r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container:{\r\n    \r\n    width:'100%',\r\n    height:'100%'\r\n  },\r\n  header:{\r\n   \r\n    position: 'absolute',\r\n    backgroundColor:'white'\r\n  },\r\n  tabsContainer:{\r\n    width:'100%',\r\n    height:'10%',\r\n    backgroundColor:'white',\r\n   \r\n  },\r\n  tab:{\r\n    width:'25%',\r\n    height:'100%',\r\n    backgroundColor:'white',\r\n    borderBottomColor:'gray',\r\n    borderBottomWidth:0.5\r\n\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}