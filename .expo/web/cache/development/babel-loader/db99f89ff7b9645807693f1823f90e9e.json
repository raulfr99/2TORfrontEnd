{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\raulf\\\\OneDrive\\\\Desktop\\\\nativeFrontend\\\\screens\\\\LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Icon, Button, Card } from 'react-native-elements';\nimport { set } from 'react-native-reanimated';\nimport Test from \"./Test\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport AwesomeAlert from 'react-native-awesome-alerts';\n\nvar imgbg = require(\"../assets/ex.jpg\");\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.showAlert = function () {\n      _this.setState({\n        showAlert: true\n      });\n    };\n\n    _this.hideAlert = function () {\n      _this.setState({\n        showAlert: false\n      });\n    };\n\n    _this.changeHandler = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      showAlert: false,\n      state: '',\n      showAlertLog: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"submit\",\n    value: function submit() {\n      var _this2 = this;\n\n      var collection = {};\n      collection.email = this.state.email, collection.password = this.state.password;\n      console.log(collection);\n      var url = 'http://54.177.164.213/auth/login/';\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(collection),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json().then(function (data) {\n          return {\n            data: data,\n            status: res.status\n          };\n        }).catch(function (error) {\n          return console.error('Error:', error);\n        }).then(function (response) {\n          console.log(response.status, response.data);\n\n          if (response.status == '200') {\n            localStorage.setItem(\"token\", response.data.tokens);\n            window.location.reload(false);\n          } else if (response.status == '403') {\n            _this2.state.state = response.data.detail;\n          } else if (response.status == '401') {\n            _this2.state.state = response.data.detail;\n          } else if (response.status == '400' && response.data.password) {\n            _this2.state.state = response.data.password;\n          } else if (response.status == '400' && response.data.email) {\n            _this2.state.state = response.data.email;\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      var _this$state2 = this.state,\n          showAlert = _this$state2.showAlert,\n          showAlertLog = _this$state2.showAlertLog;\n      var text = this.state.state;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.textTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, \"Entrar\"), React.createElement(View, {\n        style: styles.containerUserName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Email\",\n        placeholderTextColor: \"gray\",\n        style: styles.textInput,\n        onChange: this.changeHandler,\n        name: \"email\",\n        value: email,\n        selectionColor: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.containerPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Contrasena\",\n        placeholderTextColor: \"gray\",\n        style: styles.textInput,\n        onChange: this.changeHandler,\n        name: \"password\",\n        value: password,\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.containerSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.buttonLogin,\n        onPress: function onPress() {\n          return _this3.submit();\n        },\n        underlayColor: \"#fff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, \"Entrar\"))), React.createElement(AwesomeAlert, {\n        show: showAlert,\n        showProgress: false,\n        title: \"Advertencia\",\n        message: this.state.state,\n        closeOnTouchOutside: true,\n        closeOnHardwareBackPress: false,\n        showConfirmButton: true,\n        confirmText: \"Ok\",\n        confirmButtonColor: \"#DD6B55\",\n        onCancelPressed: function onCancelPressed() {\n          _this3.hideAlert();\n        },\n        onConfirmPressed: function onConfirmPressed() {\n          _this3.hideAlert();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }), React.createElement(AwesomeAlert, {\n        show: showAlertLog,\n        showProgress: true,\n        title: \"Bienvenido\",\n        message: \"Ingresando\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 10\n        }\n      }), React.createElement(Text, {\n        style: styles.alertText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }\n      }, text));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nLoginScreen.navigationOptions = {\n  header: null\n};\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    width: '100%'\n  },\n  containerSignIn: {\n    height: 60,\n    width: '30%',\n    marginTop: '10px',\n    alignSelf: 'center'\n  },\n  containerUserName: {\n    height: 60,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    marginLeft: '15%',\n    marginRight: '15%',\n    marginBottom: '5%'\n  },\n  containerPassword: {\n    height: 60,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    marginLeft: '15%',\n    marginRight: '15%',\n    marginBottom: '10%'\n  },\n  icon: {\n    flex: 1\n  },\n  textInput: {\n    backgroundColor: 'transparent',\n    flex: 5,\n    color: 'black',\n    borderBottomWidth: 1,\n    borderBottomColor: 'gray',\n    textAlign: 'left'\n  },\n  textInputP: {\n    backgroundColor: 'red',\n    flex: 5,\n    color: 'black',\n    paddingLeft: '25%',\n    borderBottomWidth: 1,\n    borderBottomColor: 'black',\n    textAlign: 'left'\n  },\n  buttonLogin: {\n    backgroundColor: '#22d48a',\n    borderRadius: 5,\n    alignItems: 'center',\n    paddingTop: '20%',\n    paddingBottom: '20px',\n    width: '280%',\n    alignSelf: 'center'\n  },\n  loginText: {\n    color: '#fff',\n    textAlign: 'center',\n    paddingLeft: 10,\n    paddingRight: 10,\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  textTitle: {\n    color: 'gray',\n    fontSize: 15,\n    alignSelf: 'center',\n    marginTop: '-15%',\n    marginBottom: '15%',\n    fontWeight: 'bold'\n  },\n  prueba: {\n    borderColor: 'red'\n  },\n  alertText: {\n    alignSelf: 'center',\n    fontSize: 10,\n    paddingTop: '12%'\n  }\n});","map":{"version":3,"sources":["C:/Users/raulf/OneDrive/Desktop/nativeFrontend/screens/LoginScreen.js"],"names":["React","Icon","Button","Card","set","Test","AwesomeAlert","imgbg","require","LoginScreen","props","showAlert","setState","hideAlert","changeHandler","e","target","name","value","state","email","password","showAlertLog","collection","console","log","url","fetch","method","body","JSON","stringify","headers","then","res","json","data","status","catch","error","response","localStorage","setItem","tokens","window","location","reload","detail","text","styles","container","textTitle","containerUserName","textInput","containerPassword","containerSignIn","buttonLogin","submit","loginText","alertText","Component","navigationOptions","header","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","width","height","marginTop","alignSelf","backgroundColor","marginLeft","marginRight","marginBottom","icon","color","borderBottomWidth","borderBottomColor","textAlign","textInputP","paddingLeft","borderRadius","paddingTop","paddingBottom","paddingRight","fontWeight","fontSize","prueba","borderColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Text, TextInput, View, Image, ImageBackground, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { Icon, Button, Card } from 'react-native-elements'\r\nimport { set } from 'react-native-reanimated';\r\nimport Test from './Test';\r\nimport { AsyncStorage } from 'react-native';\r\nimport AwesomeAlert from 'react-native-awesome-alerts';\r\n\r\nconst imgbg = require('../assets/ex.jpg');\r\nexport default class LoginScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    \r\n\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      showAlert: false,\r\n      state:'',\r\n      showAlertLog:false\r\n    }\r\n  }\r\n  static navigationOptions = {\r\n    header: null\r\n  }\r\n\r\n \r\n  showAlert = () => {\r\n    this.setState({\r\n      showAlert: true\r\n    });\r\n  };\r\n  \r\n  hideAlert = () => {\r\n    this.setState({\r\n      showAlert: false\r\n    });\r\n  };\r\n\r\n  changeHandler = e => {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n    \r\n  }\r\n\r\n  submit() {\r\n    \r\n    let collection = {}\r\n    collection.email = this.state.email,\r\n      collection.password = this.state.password\r\n\r\n    console.log(collection)\r\n\r\n    var url = 'http://54.177.164.213/auth/login/';\r\n\r\n    fetch(url, {\r\n      method: 'POST', // or 'PUT'\r\n      body: JSON.stringify(collection), // data can be `string` or {object}!\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(res => res.json().then(data => ({\r\n        data: data,\r\n        status: res.status\r\n      }))\r\n        .catch(error => console.error('Error:', error))\r\n        .then(response => {\r\n          console.log(response.status, response.data)\r\n          if (response.status == '200') {\r\n            localStorage.setItem(\"token\", response.data.tokens)\r\n           // this.state.showAlertLog = true\r\n            window.location.reload(false);\r\n            \r\n          }\r\n          else if (response.status == '403') {\r\n            this.state.state=response.data.detail\r\n          //  this.showAlert()\r\n            \r\n          }\r\n          else if (response.status == '401') {\r\n            this.state.state=response.data.detail\r\n           // this.showAlert()\r\n            \r\n          }\r\n          else if (response.status == '400' && response.data.password) {\r\n            this.state.state=response.data.password\r\n           // this.showAlert()\r\n          }\r\n          else if (response.status == '400' && response.data.email) {\r\n            this.state.state=response.data.email\r\n           // this.showAlert()\r\n          }\r\n\r\n        }));\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    const { email, password } = this.state;\r\n    const {showAlert,showAlertLog} = this.state;\r\n    const text =this.state.state\r\n    return (\r\n     \r\n      <View style={styles.container}>\r\n\r\n\r\n        <Text style={styles.textTitle}>Entrar</Text>\r\n        <View style={styles.containerUserName} >\r\n\r\n          <TextInput placeholder=\"Email\" placeholderTextColor=\"gray\" \r\n            style={styles.textInput} onChange={this.changeHandler} name=\"email\" value={email} selectionColor=\"blue\" />\r\n        </View>\r\n\r\n        <View style={styles.containerPassword}>\r\n\r\n          <TextInput placeholder=\"Contrasena\" placeholderTextColor=\"gray\"\r\n            style={styles.textInput} onChange={this.changeHandler} name=\"password\" value={password} secureTextEntry={true} />\r\n        </View>\r\n\r\n        <View style={styles.containerSignIn}>\r\n          <TouchableOpacity\r\n            style={styles.buttonLogin}\r\n            onPress={() => this.submit()}\r\n            underlayColor='#fff'>\r\n            <Text style={styles.loginText}>Entrar</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <AwesomeAlert\r\n          show={showAlert}\r\n          showProgress={false}\r\n          title=\"Advertencia\"\r\n          message={this.state.state}\r\n          closeOnTouchOutside={true}\r\n          closeOnHardwareBackPress={false}\r\n          showConfirmButton={true}\r\n          confirmText=\"Ok\"\r\n          confirmButtonColor=\"#DD6B55\"\r\n          onCancelPressed={() => {\r\n            this.hideAlert();\r\n          }}\r\n          onConfirmPressed={() => {\r\n            this.hideAlert();\r\n          }}\r\n        />\r\n         <AwesomeAlert\r\n          show={showAlertLog}\r\n          showProgress={true}\r\n          title=\"Bienvenido\"\r\n          message=\"Ingresando\"\r\n         \r\n        />\r\n          <Text style={styles.alertText}>{text}</Text>\r\n      </View>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'stretch',\r\n    width: '100%'\r\n  },\r\n  containerSignIn: {\r\n    height: 60,\r\n    width: '30%',\r\n    marginTop: '10px',\r\n    alignSelf: 'center',\r\n\r\n\r\n  },\r\n\r\n  containerUserName: {\r\n    height: 60,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'transparent',\r\n    marginLeft: '15%',\r\n    marginRight: '15%',\r\n    marginBottom: '5%'\r\n  },\r\n  containerPassword: {\r\n    height: 60,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'transparent',\r\n    marginLeft: '15%',\r\n    marginRight: '15%',\r\n    marginBottom: '10%'\r\n  },\r\n\r\n  icon: {\r\n    flex: 1\r\n  },\r\n  textInput: {\r\n    backgroundColor: 'transparent',\r\n    flex: 5,\r\n    color: 'black',\r\n    \r\n    borderBottomWidth: 1,\r\n    borderBottomColor: 'gray',\r\n    textAlign: 'left',\r\n  },\r\n  textInputP: {\r\n    backgroundColor: 'red',\r\n    flex: 5,\r\n    color: 'black',\r\n    paddingLeft: '25%',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: 'black',\r\n    textAlign: 'left',\r\n  },\r\n  buttonLogin: {\r\n    backgroundColor: '#22d48a',\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    paddingTop: '20%',\r\n    paddingBottom: '20px',\r\n    width: '280%',\r\n    alignSelf: 'center'\r\n  },\r\n  loginText: {\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    fontWeight: 'bold',\r\n    fontSize: 20\r\n  },\r\n  textTitle: {\r\n    color: 'gray',\r\n    fontSize: 15,\r\n    alignSelf: 'center',\r\n    marginTop: '-15%',\r\n    marginBottom: '15%',\r\n    fontWeight: 'bold'\r\n\r\n  },\r\n  prueba: {\r\n    borderColor: 'red'\r\n  },\r\n  alertText:{\r\n   \r\n    alignSelf:'center',\r\n    fontSize:10,\r\n    paddingTop:'12%'\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}