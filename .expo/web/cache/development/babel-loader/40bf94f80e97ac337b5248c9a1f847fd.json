{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\raulf\\\\Desktop\\\\nativeFrontend\\\\components\\\\Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Icon, Button, Card } from 'react-native-elements';\nimport { set } from 'react-native-reanimated';\n\nvar imgbg = require(\"../assets/ex.jpg\");\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.changeHandler = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    var token = localStorage.getItem(\"token\");\n\n    if (token == null) {\n      loggedIn = false;\n    }\n\n    var loggedIn = true;\n    _this.state = {\n      email: '',\n      password: '',\n      loggedIn: loggedIn\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"submit\",\n    value: function submit() {\n      var respuesta;\n      var collection = {};\n      collection.email = this.state.email, collection.password = this.state.password;\n      console.log(collection);\n      var url = 'http://127.0.0.1:8000/auth/login/';\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(collection),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).catch(function (error) {\n        return console.error('Error:', error);\n      }).then(function (response) {\n        console.log(response);\n\n        if (response.detail == 'Invalid credentials, try again') {\n          alert(\"Contrasena Incorrecta\");\n        } else {\n          localStorage.setItem(\"token\", response.token);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.loggedIn) {\n        alert('Ya esta logeado');\n      }\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          loggedIn = _this$state.loggedIn;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.containerUserName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Email\",\n        placeholderTextColor: \"gray\",\n        style: styles.textInput,\n        onChange: this.changeHandler,\n        name: \"email\",\n        value: email,\n        selectionColor: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: styles.containerPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Contrasena\",\n        placeholderTextColor: \"gray\",\n        style: styles.textInput,\n        onChange: this.changeHandler,\n        name: \"password\",\n        value: password,\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: styles.containerSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.buttonLogin,\n        onPress: function onPress() {\n          return _this2.submit();\n        },\n        underlayColor: \"#fff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 23\n        }\n      }, \"Entrar\"))), React.createElement(Button, {\n        title: \"TEST\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nLoginScreen.navigationOptions = {\n  header: null\n};\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    width: '100%'\n  },\n  containerSignIn: {\n    height: 60,\n    width: '30%',\n    marginTop: '10px',\n    alignSelf: 'center'\n  },\n  containerUserName: {\n    height: 60,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    backgroundColor: 'none',\n    marginLeft: '15%',\n    marginRight: '15%',\n    marginBottom: '5%'\n  },\n  containerPassword: {\n    height: 60,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    backgroundColor: '#ffffff',\n    marginLeft: '15%',\n    marginRight: '15%',\n    marginBottom: '10%'\n  },\n  icon: {\n    flex: 1\n  },\n  textInput: {\n    backgroundColor: 'transparent',\n    flex: 5,\n    color: 'black',\n    paddingLeft: '25%',\n    borderBottomWidth: 1,\n    borderBottomColor: 'black',\n    textAlign: 'left'\n  },\n  buttonLogin: {\n    backgroundColor: '#22d48a',\n    borderRadius: '5px',\n    alignItems: 'center',\n    paddingTop: '20px',\n    paddingBottom: '20px',\n    width: '250px',\n    alignSelf: 'center'\n  },\n  loginText: {\n    color: '#fff',\n    textAlign: 'center',\n    paddingLeft: 10,\n    paddingRight: 10,\n    fontWeight: 'bold',\n    fontSize: '15px'\n  }\n});","map":{"version":3,"sources":["C:/Users/raulf/Desktop/nativeFrontend/components/Login.js"],"names":["React","Icon","Button","Card","set","imgbg","require","LoginScreen","props","changeHandler","e","setState","target","name","value","token","localStorage","getItem","loggedIn","state","email","password","respuesta","collection","console","log","url","fetch","method","body","JSON","stringify","headers","then","res","json","catch","error","response","detail","alert","setItem","styles","container","containerUserName","textInput","containerPassword","containerSignIn","buttonLogin","submit","loginText","Component","navigationOptions","header","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","width","height","marginTop","alignSelf","backgroundColor","marginLeft","marginRight","marginBottom","icon","color","paddingLeft","borderBottomWidth","borderBottomColor","textAlign","borderRadius","paddingTop","paddingBottom","paddingRight","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Text,TextInput,View, Image,ImageBackground, StyleSheet,TouchableOpacity } from 'react-native';\r\nimport { Icon,Button,Card } from 'react-native-elements'\r\nimport { set } from 'react-native-reanimated';\r\nconst imgbg = require('../assets/ex.jpg');\r\nexport default class LoginScreen extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    const token = localStorage.getItem(\"token\")\r\n\r\n    \r\n    if(token==null){\r\n        loggedIn = false\r\n    }\r\n    let loggedIn = true\r\n    this.state = {\r\n        email:'',\r\n        password:'',\r\n        loggedIn\r\n    }\r\n}\r\n  static navigationOptions ={\r\n    header: null\r\n  }\r\n\r\n\r\nchangeHandler = e =>{\r\n  this.setState({[e.target.name]:e.target.value})\r\n}\r\nsubmit(){\r\n  var respuesta;\r\nlet collection={}\r\ncollection.email=this.state.email,\r\ncollection.password=this.state.password\r\n\r\nconsole.log(collection)\r\n\r\nvar url = 'http://127.0.0.1:8000/auth/login/';\r\n\r\nfetch(url, {\r\n  method: 'POST', // or 'PUT'\r\n  body: JSON.stringify(collection), // data can be `string` or {object}!\r\n  headers:{\r\n    'Content-Type': 'application/json'\r\n  }\r\n}).then(res => res.json())\r\n.catch(error => console.error('Error:', error))\r\n.then(response => {\r\n  console.log(response)\r\n  if(response.detail=='Invalid credentials, try again'){\r\n    alert(\"Contrasena Incorrecta\")\r\n  }\r\n  else {\r\n    localStorage.setItem(\"token\",response.token)\r\n  }\r\n});\r\n\r\n\r\n}\r\n\r\n  render() {\r\n    if(this.state.loggedIn){\r\n      alert('Ya esta logeado')\r\n  }\r\n    \r\n    const {email, password, loggedIn} = this.state;\r\n    \r\n      \r\n     \r\n    return (\r\n      \r\n      \r\n          \r\n          <View style={styles.container}>\r\n             \r\n            \r\n\r\n            <View style={styles.containerUserName}>\r\n             \r\n              <TextInput  placeholder=\"Email\" placeholderTextColor=\"gray\"\r\n              style={styles.textInput} onChange={this.changeHandler}name=\"email\" value={email} selectionColor=\"red\"  /> \r\n            </View>\r\n\r\n            <View style={styles.containerPassword}>\r\n            \r\n              <TextInput placeholder=\"Contrasena\" placeholderTextColor=\"gray\"\r\n              style={styles.textInput} onChange={this.changeHandler} name=\"password\"value={password} secureTextEntry={true} /> \r\n            </View>\r\n\r\n            <View style={styles.containerSignIn}>\r\n              <TouchableOpacity\r\n                      style={styles.buttonLogin}\r\n                      onPress={()=>this.submit()}\r\n                      underlayColor='#fff'>\r\n                      <Text style={styles.loginText}>Entrar</Text>\r\n            </TouchableOpacity>\r\n            </View>\r\n            <Button title=\"TEST\"></Button>\r\n            \r\n          </View>        \r\n       \r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container:{\r\n    flex:1,\r\n    flexDirection: 'column',\r\n    justifyContent:'center',\r\n    alignItems: 'stretch',\r\n    width:'100%'\r\n  },\r\n  containerSignIn:{\r\n    height: 60,\r\n    width:'30%',\r\n    marginTop:'10px',\r\n    alignSelf:'center',\r\n    \r\n\r\n  },\r\n  \r\n  containerUserName:{\r\n    height: 60,\r\n    flexDirection:'row',\r\n    justifyContent:'center',\r\n    backgroundColor:'none',\r\n    marginLeft:'15%',\r\n    marginRight:'15%',\r\n    marginBottom:'5%'\r\n  },\r\n  containerPassword:{\r\n    height: 60,\r\n    flexDirection:'row',\r\n    justifyContent:'center',\r\n    backgroundColor:'#ffffff',\r\n    marginLeft:'15%',\r\n    marginRight:'15%',\r\n    marginBottom:'10%'\r\n  },\r\n \r\n  icon:{\r\n    flex:1\r\n  },\r\n  textInput:{\r\n    backgroundColor:'transparent',\r\n    flex:5,\r\n    color:'black',\r\n    paddingLeft:'25%',\r\n    borderBottomWidth:1,\r\n    borderBottomColor:'black',\r\n    textAlign:'left'\r\n\r\n    \r\n\r\n  },\r\n  buttonLogin:{\r\n    backgroundColor:'#22d48a',\r\n    borderRadius:'5px',\r\n    alignItems:'center',\r\n    paddingTop:'20px',\r\n    paddingBottom:'20px',\r\n    width:'250px',\r\n    alignSelf:'center'\r\n  },\r\n  loginText:{\r\n    color:'#fff',\r\n    textAlign:'center',\r\n    paddingLeft : 10,\r\n    paddingRight : 10,\r\n    fontWeight:'bold',\r\n    fontSize:'15px'\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}