{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\raulf\\\\Desktop\\\\nativeFrontend\\\\screens\\\\Test.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Icon, Button, Card } from 'react-native-elements';\nimport { Avatar, Accessory } from 'react-native-elements';\nimport LoginScreen from \"../screens/LoginScreen\";\nimport RegisterScreen from \"../screens/Register\";\n\nvar imgbg = require(\"../assets/fondo2.jpg\");\n\nvar logo = require(\"../assets/logo.png\");\n\nvar Test = function (_React$Component) {\n  _inherits(Test, _React$Component);\n\n  var _super = _createSuper(Test);\n\n  function Test(props) {\n    var _this;\n\n    _classCallCheck(this, Test);\n\n    _this = _super.call(this, props);\n    var token = localStorage.getItem(\"token\");\n    var loggedIn = true;\n\n    if (token == null) {\n      loggedIn = false;\n    }\n\n    _this.state = {\n      cardstate: 0,\n      loggedIn: loggedIn\n    };\n    return _this;\n  }\n\n  _createClass(Test, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.loggedIn) {\n        this.props.navigation.navigate('Home');\n      }\n\n      var logHandler = function logHandler() {};\n\n      return React.createElement(ImageBackground, {\n        source: imgbg,\n        style: styles.imgBack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, React.createElement(Avatar, {\n        style: styles.avatar,\n        rounded: true,\n        source: {\n          uri: logo\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 10\n        }\n      }), React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.buttonLogin,\n        onPress: function onPress() {\n          return _this2.setState({\n            cardstate: 0\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.textButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, \"Entrar\")), React.createElement(TouchableOpacity, {\n        style: styles.buttonRegister,\n        onPress: function onPress() {\n          return _this2.setState({\n            cardstate: 1\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 10\n        }\n      }, React.createElement(Text, {\n        style: styles.textButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, \"Registrar\"))), React.createElement(View, {\n        style: styles.tabsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 10\n        }\n      }, this.state.cardstate == 0 ? React.createElement(LoginScreen, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 41\n        }\n      }) : React.createElement(RegisterScreen, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 62\n        }\n      }))), React.createElement(TextInput, {\n        placeholder: \"hola\",\n        style: {\n          width: '100px',\n          height: '100px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.recuperarText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, \"Recuperar Password\"));\n    }\n  }]);\n\n  return Test;\n}(React.Component);\n\nexport { Test as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  buttonLogin: {\n    alignItems: \"center\",\n    padding: 10,\n    width: '45%',\n    marginLeft: '-15%'\n  },\n  buttonRegister: {\n    alignItems: \"center\",\n    padding: 10,\n    width: '45%',\n    marginLeft: '40%'\n  },\n  buttonContainer: {\n    alignSelf: 'center',\n    width: '50%',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  tabsContainer: {\n    height: '80%',\n    width: '80%',\n    alignSelf: 'center',\n    backgroundColor: '#e1e9f5',\n    borderRadius: '30px',\n    backgroundColor: 'white'\n  },\n  avatar: {\n    height: '100px',\n    width: '100px',\n    alignSelf: 'center',\n    marginBottom: '-3%',\n    marginTop: '12%'\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10\n  },\n  textButton: {\n    color: 'white',\n    fontSize: '18px',\n    fontWeight: 'bold'\n  },\n  imgBack: {\n    resizeMode: 'cover',\n    flex: 1\n  },\n  recuperarText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: '1.5rem',\n    alignSelf: 'center',\n    marginBottom: '10%'\n  }\n});","map":{"version":3,"sources":["C:/Users/raulf/Desktop/nativeFrontend/screens/Test.js"],"names":["React","Icon","Button","Card","Avatar","Accessory","LoginScreen","RegisterScreen","imgbg","require","logo","Test","props","token","localStorage","getItem","loggedIn","state","cardstate","navigation","navigate","logHandler","styles","imgBack","avatar","uri","container","buttonContainer","buttonLogin","setState","textButton","buttonRegister","tabsContainer","width","height","recuperarText","Component","StyleSheet","create","flex","alignItems","padding","marginLeft","alignSelf","flexDirection","justifyContent","backgroundColor","borderRadius","marginBottom","marginTop","button","color","fontSize","fontWeight","resizeMode"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;;AAEA,SAASC,IAAT,EAAcC,MAAd,EAAqBC,IAArB,QAAiC,uBAAjC;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,uBAAlC;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP;;AACA,IAAMC,KAAK,GAAGC,OAAO,wBAArB;;AACA,IAAMC,IAAI,GAAGD,OAAO,sBAApB;;IACqBE,I;;;;;AACnB,gBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;AACA,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,QAAIC,QAAQ,GAAG,IAAf;;AACA,QAAGH,KAAK,IAAE,IAAV,EAAe;AACXG,MAAAA,QAAQ,GAAG,KAAX;AACH;;AAED,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAC,CADC;AAEXF,MAAAA,QAAQ,EAARA;AAFW,KAAb;AATgB;AAanB;;;;6BAEU;AAAA;;AAEP,UAAG,KAAKC,KAAL,CAAWD,QAAd,EAAuB;AACrB,aAAKJ,KAAL,CAAWO,UAAX,CAAsBC,QAAtB,CAA+B,MAA/B;AACD;;AACD,UAAMC,UAAU,GAAC,SAAXA,UAAW,GAAI,CAEpB,CAFD;;AAIA,aACE,oBAAC,eAAD;AAAkB,QAAA,MAAM,EAAEb,KAA1B;AAAgC,QAAA,KAAK,EAAEc,MAAM,CAACC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,MAAD;AACK,QAAA,KAAK,EAAED,MAAM,CAACE,MADnB;AAEK,QAAA,OAAO,MAFZ;AAGK,QAAA,MAAM,EAAE;AACFC,UAAAA,GAAG,EACDf;AAFA,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EASI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEY,MAAM,CAACI,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,gBAAD;AACL,QAAA,KAAK,EAAEL,MAAM,CAACM,WADT;AACsB,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,QAAL,CAAc;AAAEX,YAAAA,SAAS,EAAE;AAAb,WAAd,CAAN;AAAA,SAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEN,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACQ,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFM,CADA,EAKL,oBAAC,gBAAD;AACA,QAAA,KAAK,EAAER,MAAM,CAACS,cADd;AAC8B,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACF,QAAL,CAAc;AAAEX,YAAAA,SAAS,EAAE;AAAb,WAAd,CAAN;AAAA,SADvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAED,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACQ,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFC,CALK,CAFJ,EAYD,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACU,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKf,KAAL,CAAWC,SAAX,IAAwB,CAAxB,GAA8B,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9B,GAAmD,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADpD,CAZC,CATJ,EA0BI,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAC,MAAvB;AAA8B,QAAA,KAAK,EAAE;AAACe,UAAAA,KAAK,EAAC,OAAP;AAAeC,UAAAA,MAAM,EAAC;AAAtB,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BJ,EA2BI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEZ,MAAM,CAACa,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BA3BJ,CADF;AAgCD;;;;EAzD+BnC,KAAK,CAACoC,S;;SAAnBzB,I;AA6DrB,IAAMW,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC/BZ,EAAAA,SAAS,EAAC;AACRa,IAAAA,IAAI,EAAC,CADG;AAERN,IAAAA,KAAK,EAAC,MAFE;AAGRC,IAAAA,MAAM,EAAC;AAHC,GADqB;AAM/BN,EAAAA,WAAW,EAAC;AACVY,IAAAA,UAAU,EAAE,QADF;AAEVC,IAAAA,OAAO,EAAE,EAFC;AAGVR,IAAAA,KAAK,EAAC,KAHI;AAIVS,IAAAA,UAAU,EAAC;AAJD,GANmB;AAc/BX,EAAAA,cAAc,EAAC;AACbS,IAAAA,UAAU,EAAE,QADC;AAEbC,IAAAA,OAAO,EAAE,EAFI;AAGbR,IAAAA,KAAK,EAAC,KAHO;AAIbS,IAAAA,UAAU,EAAC;AAJE,GAdgB;AAuB/Bf,EAAAA,eAAe,EAAE;AAChBgB,IAAAA,SAAS,EAAC,QADM;AAEfV,IAAAA,KAAK,EAAC,KAFS;AAGfW,IAAAA,aAAa,EAAE,KAHA;AAIfC,IAAAA,cAAc,EAAE;AAJD,GAvBc;AA+B/Bb,EAAAA,aAAa,EAAC;AACZE,IAAAA,MAAM,EAAC,KADK;AAEZD,IAAAA,KAAK,EAAC,KAFM;AAGZU,IAAAA,SAAS,EAAC,QAHE;AAIZG,IAAAA,eAAe,EAAC,SAJJ;AAKZC,IAAAA,YAAY,EAAC,MALD;AAMZD,IAAAA,eAAe,EAAC;AANJ,GA/BiB;AAyC/BtB,EAAAA,MAAM,EAAC;AACLU,IAAAA,MAAM,EAAC,OADF;AAELD,IAAAA,KAAK,EAAC,OAFD;AAGLU,IAAAA,SAAS,EAAC,QAHL;AAILK,IAAAA,YAAY,EAAC,KAJR;AAKLC,IAAAA,SAAS,EAAC;AALL,GAzCwB;AAiD/BC,EAAAA,MAAM,EAAE;AACNV,IAAAA,UAAU,EAAE,QADN;AAENM,IAAAA,eAAe,EAAE,SAFX;AAGNL,IAAAA,OAAO,EAAE;AAHH,GAjDuB;AAsD/BX,EAAAA,UAAU,EAAC;AACTqB,IAAAA,KAAK,EAAC,OADG;AAETC,IAAAA,QAAQ,EAAC,MAFA;AAGTC,IAAAA,UAAU,EAAC;AAHF,GAtDoB;AA2D/B9B,EAAAA,OAAO,EAAC;AACN+B,IAAAA,UAAU,EAAC,OADL;AAENf,IAAAA,IAAI,EAAC;AAFC,GA3DuB;AAkE/BJ,EAAAA,aAAa,EAAC;AACZgB,IAAAA,KAAK,EAAC,OADM;AAEZE,IAAAA,UAAU,EAAC,MAFC;AAGZD,IAAAA,QAAQ,EAAC,QAHG;AAIZT,IAAAA,SAAS,EAAC,QAJE;AAKZK,IAAAA,YAAY,EAAC;AALD;AAlEiB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { Text,TextInput,View, Image,ImageBackground, StyleSheet,TouchableOpacity } from 'react-native';\r\nimport { Icon,Button,Card } from 'react-native-elements'\r\nimport { Avatar, Accessory } from 'react-native-elements';\r\nimport LoginScreen from '../screens/LoginScreen';\r\nimport RegisterScreen from '../screens/Register';\r\nconst imgbg = require('../assets/fondo2.jpg');\r\nconst logo = require('../assets/logo.png');\r\nexport default class Test extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    const token = localStorage.getItem(\"token\")\r\n\r\n    let loggedIn = true\r\n    if(token==null){\r\n        loggedIn = false\r\n    }\r\n   \r\n    this.state = {\r\n      cardstate:0,\r\n      loggedIn\r\n    }\r\n}\r\n\r\n  render() {\r\n    \r\n    if(this.state.loggedIn){\r\n      this.props.navigation.navigate('Home')\r\n    }\r\n    const logHandler=()=>{\r\n      \r\n    }\r\n\r\n    return (\r\n      <ImageBackground  source={imgbg}style={styles.imgBack}>\r\n         <Avatar\r\n              style={styles.avatar}\r\n              rounded\r\n              source={{\r\n                    uri:\r\n                      logo,\r\n                   }}\r\n                />\r\n          <View style={styles.container}>\r\n              \r\n              <View style={styles.buttonContainer}>\r\n              <TouchableOpacity\r\n         style={styles.buttonLogin} onPress={() => this.setState({ cardstate: 0})}>\r\n        <Text style={styles.textButton}>Entrar</Text>\r\n         </TouchableOpacity>\r\n         <TouchableOpacity\r\n         style={styles.buttonRegister} onPress={() => this.setState({ cardstate: 1})}>\r\n        <Text style={styles.textButton}>Registrar</Text>\r\n         </TouchableOpacity>\r\n         </View>\r\n         <View style={styles.tabsContainer}>\r\n         {this.state.cardstate == 0 ? ( <LoginScreen/> ) : ( <RegisterScreen/> )}\r\n         </View>\r\n          \r\n          </View>    \r\n          <TextInput placeholder=\"hola\" style={{width:'100px',height:'100px'}}/>\r\n          <Text style={styles.recuperarText}>Recuperar Password</Text>\r\n         </ImageBackground>   \r\n        \r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container:{\r\n    flex:1,\r\n    width:'100%',\r\n    height:'100%',\r\n  },\r\n  buttonLogin:{\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    width:'45%',\r\n    marginLeft:'-15%',\r\n    \r\n    \r\n  },\r\n  buttonRegister:{\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    width:'45%',\r\n    marginLeft:'40%',\r\n    \r\n    \r\n  },\r\n  \r\n  buttonContainer: {\r\n   alignSelf:'center',\r\n    width:'50%',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    \r\n    \r\n  },\r\n  tabsContainer:{\r\n    height:'80%',\r\n    width:'80%',\r\n    alignSelf:'center',\r\n    backgroundColor:'#e1e9f5',\r\n    borderRadius:'30px',\r\n    backgroundColor:'white',\r\n    \r\n\r\n  },\r\n  avatar:{\r\n    height:'100px',\r\n    width:'100px',\r\n    alignSelf:'center',\r\n    marginBottom:'-3%',\r\n    marginTop:'12%'\r\n  },\r\n \r\n  button: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#DDDDDD\",\r\n    padding: 10\r\n  },\r\n  textButton:{\r\n    color:'white',\r\n    fontSize:'18px',\r\n    fontWeight:'bold'\r\n  },\r\n  imgBack:{\r\n    resizeMode:'cover',\r\n    flex:1,\r\n    \r\n\r\n    \r\n  },\r\n  recuperarText:{\r\n    color:'white',\r\n    fontWeight:'bold',\r\n    fontSize:'1.5rem',\r\n    alignSelf:'center',\r\n    marginBottom:'10%'\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}